{
  "ast": null,
  "code": "import { EventEmitter } from '@angular/core';\nimport { Tools } from 'src/app/tools/tools';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"cont_error\"];\nexport let AlertComponentComponent = /*#__PURE__*/(() => {\n  class AlertComponentComponent {\n    constructor() {\n      this.tools = new Tools();\n      this.msg = '';\n      this.is_closed = new EventEmitter();\n    }\n    ngAfterViewInit() {\n      this.show();\n    }\n    show() {\n      this.tools.showComponent(this.modal.nativeElement);\n    }\n    close() {\n      this.tools.hideComponent(this.modal.nativeElement);\n      this.msg = '';\n      this.is_closed.emit(true);\n    }\n  }\n  AlertComponentComponent.ɵfac = function AlertComponentComponent_Factory(t) {\n    return new (t || AlertComponentComponent)();\n  };\n  AlertComponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlertComponentComponent,\n    selectors: [[\"app-alert-component\"]],\n    viewQuery: function AlertComponentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n      }\n    },\n    inputs: {\n      msg: \"msg\"\n    },\n    outputs: {\n      is_closed: \"is_closed\"\n    },\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"modal_container\", \"cont_error\"], [\"cont_error\", \"\"], [1, \"container\"], [1, \"btns_cont\"], [3, \"click\"], [1, \"material-symbols-outlined\"], [1, \"centered\"]],\n    template: function AlertComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AlertComponentComponent_Template_button_click_4_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelementStart(5, \"span\", 5);\n        i0.ɵɵtext(6, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"p\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.msg);\n      }\n    },\n    styles: [\".container[_ngcontent-%COMP%]{padding:10px;border-radius:15px;background-color:#1e1e1e;width:50vh}.container[_ngcontent-%COMP%] > .btns_cont[_ngcontent-%COMP%] > button[_ngcontent-%COMP%], .container[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{color:var(--p_color)}.container[_ngcontent-%COMP%] > .btns_cont[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;width:100%}.container[_ngcontent-%COMP%] > .btns_cont[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{transition:all .3s ease-out}.container[_ngcontent-%COMP%] > .btns_cont[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:hover{color:#fff}.container[_ngcontent-%COMP%] > .btns_cont[_ngcontent-%COMP%] > button[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-size:28pt}.container[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{padding:25px;font-size:18pt}\"]\n  });\n  return AlertComponentComponent;\n})();",
  "map": null,
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}
